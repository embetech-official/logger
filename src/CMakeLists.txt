message(
  DEBUG
  "Selected logger options:
- CONFIG_LOGGER_FP_SUPPORT: ${CONFIG_LOGGER_FP_SUPPORT}
- CONFIG_LOGGER_PTRDIFF_SUPPORT: ${CONFIG_LOGGER_PTRDIFF_SUPPORT}
- CONFIG_LOGGER_EXPONENT_SUPPORT ${CONFIG_LOGGER_EXPONENT_SUPPORT}
- CONFIG_LOGGER_TIMESTAMPS: ${CONFIG_LOGGER_TIMESTAMPS}
- CONFIG_LOGGER_HUMAN_READABLE_TIMESTAMP: ${CONFIG_LOGGER_HUMAN_READABLE_TIMESTAMP}
- CONFIG_LOGGER_CUSTOM_AFFIXES: ${CONFIG_LOGGER_CUSTOM_AFFIXES}
- CONFIG_LOGGER_RUNTIME_VERBOSITY: ${CONFIG_LOGGER_RUNTIME_VERBOSITY}
- CONFIG_LOGGER_HEADER_WITH_LOCATION: ${CONFIG_LOGGER_HEADER_WITH_LOCATION}
- CONFIG_LOGGER_THREAD_SAFETY_HOOKS: ${CONFIG_LOGGER_THREAD_SAFETY_HOOKS}
- CONFIG_LOGGER_FLUSH_HOOKS: ${CONFIG_LOGGER_FLUSH_HOOKS}
- CONFIG_LOGGER_VERBOSE_ERRORS: ${CONFIG_LOGGER_VERBOSE_ERRORS}
- CONFIG_LOGGER_TESTS: ${CONFIG_LOGGER_TESTS}"
)

add_library(logger STATIC logger.c third_party/printf.c)

target_include_directories(
  logger
  PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include> $<INSTALL_INTERFACE:include>
  PRIVATE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/third_party>
)

target_compile_definitions(
  logger
  PRIVATE PRINTF_SUPPORT_FLOAT=$<BOOL:${CONFIG_LOGGER_FP_SUPPORT}>
          PRINTF_SUPPORT_EXPONENTIAL=$<BOOL:${CONFIG_LOGGER_EXPONENT_SUPPORT}>
          PRINTF_SUPPORT_PTRDIFF_T=$<BOOL:${CONFIG_LOGGER_PTRDIFF_SUPPORT}>
          CONFIG_LOGGER_TIMESTAMPS=$<BOOL:${CONFIG_LOGGER_TIMESTAMPS}>
          CONFIG_LOGGER_HUMAN_READABLE_TIMESTAMP=$<BOOL:${CONFIG_LOGGER_HUMAN_READABLE_TIMESTAMP}>
  PUBLIC CONFIG_LOGGER_CUSTOM_AFFIXES=$<BOOL:${CONFIG_LOGGER_CUSTOM_AFFIXES}>
         CONFIG_LOGGER_RUNTIME_VERBOSITY=$<BOOL:${CONFIG_LOGGER_RUNTIME_VERBOSITY}>
         CONFIG_LOGGER_HEADER_WITH_LOCATION=$<BOOL:${CONFIG_LOGGER_HEADER_WITH_LOCATION}>
         CONFIG_LOGGER_THREAD_SAFETY_HOOKS=$<BOOL:${CONFIG_LOGGER_THREAD_SAFETY_HOOKS}>
         CONFIG_LOGGER_FLUSH_HOOKS=$<BOOL:${CONFIG_LOGGER_FLUSH_HOOKS}>
         CONFIG_LOGGER_VERBOSE_ERRORS=$<BOOL:${CONFIG_LOGGER_VERBOSE_ERRORS}>
)

target_compile_features(logger PUBLIC c_std_99)

add_library(embetech::logger ALIAS logger)

if (CONFIG_LOGGER_INSTALL OR PROJECT_IS_TOP_LEVEL)
  include(logger_install)
endif ()
