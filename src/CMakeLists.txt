message(
  DEBUG
  "Selected logger options:
- LOGGER_FP_SUPPORT: ${LOGGER_FP_SUPPORT}
- LOGGER_PTRDIFF_SUPPORT: ${LOGGER_PTRDIFF_SUPPORT}
- LOGGER_EXPONENT_SUPPORT ${LOGGER_EXPONENT_SUPPORT}
- LOGGER_TIMESTAMPS: ${LOGGER_TIMESTAMPS}
- LOGGER_HUMAN_READABLE_TIMESTAMP: ${LOGGER_HUMAN_READABLE_TIMESTAMP}
- LOGGER_CUSTOM_AFFIXES: ${LOGGER_CUSTOM_AFFIXES}
- LOGGER_RUNTIME_VERBOSITY: ${LOGGER_RUNTIME_VERBOSITY}
- LOGGER_HEADER_WITH_LOCATION: ${LOGGER_HEADER_WITH_LOCATION}
- LOGGER_THREAD_SAFETY_HOOKS: ${LOGGER_THREAD_SAFETY_HOOKS}
- LOGGER_FLUSH_HOOKS: ${LOGGER_FLUSH_HOOKS}
- LOGGER_VERBOSE_ERRORS: ${LOGGER_VERBOSE_ERRORS}
- LOGGER_TESTS: ${LOGGER_TESTS}"
)

add_library(logger STATIC logger.c third_party/printf.c)

target_include_directories(
  logger
  PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include> $<INSTALL_INTERFACE:include>
  PRIVATE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/third_party>
)

target_compile_definitions(
  logger
  PRIVATE PRINTF_SUPPORT_FLOAT=$<BOOL:${LOGGER_FP_SUPPORT}>
          PRINTF_SUPPORT_EXPONENTIAL=$<BOOL:${LOGGER_EXPONENT_SUPPORT}>
          PRINTF_SUPPORT_PTRDIFF_T=$<BOOL:${LOGGER_PTRDIFF_SUPPORT}>
          LOGGER_TIMESTAMPS=$<BOOL:${LOGGER_TIMESTAMPS}>
          LOGGER_HUMAN_READABLE_TIMESTAMP=$<BOOL:${LOGGER_HUMAN_READABLE_TIMESTAMP}>
  PUBLIC LOGGER_CUSTOM_AFFIXES=$<BOOL:${LOGGER_CUSTOM_AFFIXES}>
         LOGGER_RUNTIME_VERBOSITY=$<BOOL:${LOGGER_RUNTIME_VERBOSITY}>
         LOGGER_HEADER_WITH_LOCATION=$<BOOL:${LOGGER_HEADER_WITH_LOCATION}>
         LOGGER_THREAD_SAFETY_HOOKS=$<BOOL:${LOGGER_THREAD_SAFETY_HOOKS}>
         LOGGER_FLUSH_HOOKS=$<BOOL:${LOGGER_FLUSH_HOOKS}>
         LOGGER_VERBOSE_ERRORS=$<BOOL:${LOGGER_VERBOSE_ERRORS}>
)

target_compile_features(logger PUBLIC c_std_99)

add_library(embetech::logger ALIAS logger)

if (LOGGER_INSTALL OR PROJECT_IS_TOP_LEVEL)
  include(logger_install)
endif ()
